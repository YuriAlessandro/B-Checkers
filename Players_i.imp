/* Players_i
* Author: PedroArthur
* Creation date: 12/06/2018
*/

IMPLEMENTATION Players_i
REFINES Players
CONCRETE_VARIABLES 
    pieces1_i, pieces2_i, checkers1_i, checkers2_i
INVARIANT 
    pieces1_i : (0..11) --> BOOL & pieces2_i : (0..11) --> BOOL 
    & checkers1_i : (0..11) --> BOOL & checkers2_i : (0..11) --> BOOL
    & pieces1 = dom(pieces1_i |> {TRUE}) & pieces2 = dom(pieces2_i |> {TRUE})
    & checkers1 = dom(checkers1_i |> {TRUE}) & checkers2 = dom(checkers2_i |> {TRUE})
INITIALISATION
    VAR ii IN
        ii := 0;
        WHILE (ii <= 11) DO 
            pieces1_i(ii) := TRUE;
            pieces2_i(ii) := TRUE;
            checkers1_i(ii) := FALSE;
            checkers2_i(ii) := FALSE;
            ii := ii + 1
        INVARIANT !nn . (nn:0..(ii-1) => (pieces1_i(ii) = TRUE & 
                    checkers1_i(ii) = FALSE & pieces2_i(ii) = TRUE & 
                    checkers2_i(ii) = FALSE))
        VARIANT (11 - ii)
        END          
    END
OPERATIONS
    remove_piece(pc,pl)=
    BEGIN
        VAR ck1, ck2 IN
            ck1 := checkers1_i(pc);
            ck2 := checkers2_i(pc);
            IF pc >= 0 & pc <= 11 & ck1 = FALSE & ck2 = FALSE & (pl = P1 or pl = P2)
            THEN
                IF pl = P1
                THEN pieces1_i(pc) := FALSE
                ELSE pieces2_i(pc) := FALSE
                END
            END
        END
    END;
    
    remove_checker(pc,pl)=
    BEGIN
        VAR ck1, ck2 IN
            ck1 := checkers1_i(pc);
            ck2 := checkers2_i(pc);
            IF pc >= 0 & pc <= 11 & ck1 = TRUE or ck2 = TRUE & (pl = P1 or pl = P2) 
            THEN
                IF pl = P1 & ck1 = TRUE
                THEN pieces1_i(pc) := FALSE; 
                    checkers1_i(pc) := FALSE
                ELSE IF pl= P2
                    THEN pieces2_i(pc) := FALSE;
                        checkers2_i(pc) := FALSE
                    END
                END
            END
        END    
    END;
    
    promote_to_checker(pc,pl)=
    BEGIN 
        IF pc >= 0 & pc <= 11 & (pl = P1 or pl = P2) 
        THEN
            VAR pc1, pc2, ck1, ck2 IN
                pc1 := pieces1_i(pc);
                ck1 := checkers1_i(pc);
                pc2 := pieces2_i(pc);
                ck2 := checkers2_i(pc);
                IF pl = P1 & pc1 = TRUE & ck1 = FALSE
                THEN checkers1_i(pc) := TRUE
                ELSE IF pl = P2 & pc2 = TRUE & ck2 = FALSE
                    THEN checkers2_i(pc) := TRUE
                    END
                END
            END
        END
    END;
    
    
    aa <-- is_checker(pc, pl)=
    BEGIN
        IF pc >= 0 & pc <= 11 & (pl = P1 or pl = P2) 
        THEN
            VAR pc1, pc2, ck1, ck2 IN
                pc1 := pieces1_i(pc);
                pc2 := pieces2_i(pc);
                ck1 := checkers1_i(pc);
                ck2 := checkers2_i(pc);
                IF (pl = P1 & pc1 = TRUE & ck1 = TRUE) or (pl = P2 & pc1 = TRUE & ck2 = TRUE)
                THEN aa := yes
                ELSE
                    aa := no
                END
            END
        END
    END;
    
    ww <-- get_winner =
    BEGIN
        VAR ii, aa, jj, bb IN
            aa := FALSE;
            bb := FALSE;
            ii := 0;
            jj := 0;
            WHILE (ii < 12 & aa = FALSE) DO
                VAR tt IN
                    tt := pieces1_i(ii); 
                    IF tt = TRUE
                    THEN aa := TRUE
                    END
                END;
                ii := ii + 1
            INVARIANT !nn . (nn:0..(ii-1) => (pieces1_i(ii) = FALSE))
            VARIANT 12 - ii
            END;
            IF aa = FALSE
            THEN ww := P2
            ELSE
                WHILE (jj < 12 & bb = FALSE) DO
                    VAR rr IN
                        rr := pieces2_i(jj); 
                        IF rr = TRUE 
                        THEN bb := TRUE 
                        END
                    END;
                    jj := jj + 1
                INVARIANT !nn . (nn:0..(jj-1) => (pieces2_i(jj) = FALSE))
                VARIANT 12 - jj
                END;
                IF bb = FALSE
                THEN ww := P1
                END
            END
            
        END
    END 
END